{"version":3,"sources":["assets/images/markus-spiske-code.jpg","components/Footer.js","components/Hero.js","components/CardInfo.js","components/Card.js","components/Carousel.js","pages/Home.js","pages/CV.js","pages/Projects.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","someText","CardInfo","style","useSpring","opacity","from","div","href","link","target","rel","Card","onMouseOver","event","hover","item","src","imgSrc","alt","selected","Carousel","handleCardHover","id","card","items","state","forEach","setState","makeItems","map","key","imgCode","this","React","Component","Home","CV","Projects","Contact","App","headerLinks","path","home","cv","projects","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec8e56fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/markus-spiske-code.e9326eb6.jpg\";","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction Footer() {\n    return ( \n    <footer className=\"mt-5\">\n      <Container fluid={true}>\n        <Row className=\"border-top justify-content-between p-3\">\n          <Col className=\"p-0\" md={3} sm={12}> \n            Allan Kadhem\n          </Col>\n          <Col className=\"p-0 d-flex justify-content-end\" md={4}> \n            Built using React & Bootstrap. Find out how here.\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n    )\n  }\n\n  export default Footer;","import React from \"react\";\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\n\nfunction Hero(props) {\n  return (\n    <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\n      <Container fluid={true}>\n        <Row className= \"justify-content-center py-5\">\n          <Col md={8} sm={12}>\n            {props.title && <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1>}\n            {props.subTitle && <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3>}\n            {props.someText && <h3 className=\"lead font-weight-light\">{props.someText}</h3>}\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nfunction CardInfo(props) {\n  const style = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n  return (\n    <animated.div className=\"hero-card-info\" style={style}>\n      <p className=\"hero-card-title\">{props.title}</p>\n      <p className=\"hero-card-sub-title\">{props.subTitle}</p>\n      <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n        View\n      </a>\n    </animated.div>\n  );\n}\n\nexport default CardInfo;\n","import React from \"react\";\nimport CardInfo from \"./CardInfo\"\n\nfunction Card(props) {\n  return (\n   <div className=\"d-inline-block hero-card\" onMouseOver={(event) => props.hover(props.item)}>\n       <img className=\"hero-card-image\" src={props.item.imgSrc} alt={props.item.imgSrc} />\n       {props.item.selected && <CardInfo title={props.item.title} subTitle={props.item.subTitle} />}\n   </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nimport Card from \"./Card\";\n\nimport imgCode from \"../assets/images/markus-spiske-code.jpg\";\n\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          id: 0,\n          title: \"First Project\",\n          subTitle: \"description\",\n          imgSrc: imgCode,\n          link: \"/projects\",\n          selected: false\n        },\n        {\n          id: 1,\n          title: \"Second Project\",\n          subTitle: \"description\",\n          imgSrc: imgCode,\n          link: \"/projects\",\n          selected: false\n        },\n        {\n          id: 2,\n          title: \"Third Project\",\n          subTitle: \"description\",\n          imgSrc: imgCode,\n          link: \"/projects\",\n          selected: false\n        }\n      ]\n    };\n  }\n\n  handleCardHover = (id, card) => {\n    let items = [...this.state.items];\n\n    items[id].selected = items[id].selected ? false : true;\n\n    items.forEach(items => {\n      if (items.id !== id) {\n        items.selected = false;\n      }\n    });\n\n    this.setState({\n      items\n    });\n  };\n\n  makeItems = items => {\n    return items.map(item => {\n      return (\n        <Card\n          item={item}\n          hover={(event => this.handleCardHover(item.id, event))}\n          key={item.id}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row className=\"justify-content-around p-3\">\n          {this.makeItems(this.state.items)}\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default Carousel;\n","import React from \"react\";\n\nimport Hero from \"../components/Hero\";\nimport Carousel from \"../components/Carousel\";\n\nfunction Home(props) {\n  return (\n    <div>\n      <Hero\n        title={props.title}\n        subTitle={props.subTitle}\n        someText={props.someText}\n      />\n      <Carousel />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction CV(props) {\n    return ( \n    <header>\n      <h3>This is my CV page</h3>\n    </header>\n    )\n  }\n\n  export default CV;","import React from \"react\";\n\nfunction Projects(props) {\n    return ( \n    <header>\n      <h3>This is my Projects page</h3>\n    </header>\n    )\n  }\n\n  export default Projects;","import React from \"react\";\n\nfunction Contact(props) {\n    return ( \n    <header>\n      <h3>This is my Contact Page</h3>\n    </header>\n    )\n  }\n\n  export default Contact;","//React Imports\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n//Style Imports\nimport Container from \"react-bootstrap/Container\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"./App.css\";\n//Component Imports\nimport Footer from \"./components/Footer\";\n//Pages Imports\nimport Home from \"./pages/Home\";\nimport CV from \"./pages/CV\";\nimport Projects from \"./pages/Projects\";\nimport Contact from \"./pages/Contact\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Allan Kadhem \",\n      headerLinks: [\n        { title: \"Home\", path: \"/\" },\n        { title: \"CV\", path: \"/cv\" },\n        { title: \"Projects\", path: \"/projects\" },\n        { title: \"Contact\", path: \"/contact\" }\n      ],\n      home: {\n        title: \"Allan Kadhem\",\n        subTitle: \"Graduate full-stack web developer.\",\n        someText: \"Checkout my latest work\"\n      },\n      cv: {\n        title: \"The boring stuff\"\n      },\n      projects: {\n        title: \"My works\"\n      },\n      contact: {\n        title: \"Let's talk\"\n      }\n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand>Allan Kadhem</Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home\n                </Link>\n                <Link className=\"nav-link\" to=\"/cv\">\n                  CV\n                </Link>\n                <Link className=\"nav-link\" to=\"/projects\">\n                  Projects\n                </Link>\n                <Link className=\"nav-link\" to=\"/contact\">\n                  Contact\n                </Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Home\n                title={this.state.home.title}\n                subTitle={this.state.home.subTitle}\n                someText={this.state.home.someText}\n              />\n            )}\n          />\n          <Route \n            path=\"/cv\"\n            render={() => <CV title={this.state.cv.title} /> } />\n          <Route\n            path=\"/projects\"\n            render={() => <Projects title={this.state.projects.title} /> } />\n          <Route\n            path=\"/contact\"\n            render={() => <Contact title={this.state.contact.title} /> } />\n\n          <Footer />\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}